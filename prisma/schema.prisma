// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String
  password        String
  role            UserRolesEnum
  contactNo       String
  address         String
  profileImg      String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  reviewAndRatings ReviewAndRating[]
  orders           Order[]
}

enum UserRolesEnum {
  admin
  customer
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]
}

model Book {
  id              String   @id @default(uuid())
  title           String
  author          String
  price           String
  genre           String
  publicationDate DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      String
  reviewAndRatings ReviewAndRating[]
  orderedBooks     OrderedBook[]
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user   User   @relation(fields: [userId], references: [id])
  userId String

  book   Book   @relation(fields: [bookId], references: [id])
  bookId String
}

model Order {
  id     String          @id @default(uuid())
  user   User            @relation(fields: [userId], references: [id])
  userId String
  status OrderStatusEnum @default(pending)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderedBooks OrderedBook[]
}

enum OrderStatusEnum {
  pending
  shipped
  delivered
}

model OrderedBook {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  book     Book   @relation(fields: [bookId], references: [id])
  bookId   String
  quantity Int
}
